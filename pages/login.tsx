/* eslint-disable react-hooks/exhaustive-deps */
import Head from "next/head"
import Image from "next/image"
import {useState} from "react"
import { useForm } from "react-hook-form"
import { SubmitHandler } from "react-hook-form/dist/types"
import useAuth from "../hooks/useAuth"
import Stripe from "stripe"
import { loginUser } from "../Store/modalSlice"
import { useDispatch } from "react-redux"
interface Input  {
  email: string,
  password: string,
}
const Login = ({products}:any) => {
  const dispatch  = useDispatch()
  console.log(products);
  const [login, setLogin] = useState(false)
  const {signIn, signUp} = useAuth()
  const {register, handleSubmit, formState: {errors}, } = useForm<Input>()
  const onSubmit:SubmitHandler<Input> = async({email, password}) =>{
    if(login){
      // Cookies.set("session", login)
      await signIn(email, password)
      dispatch(loginUser({email:email, password: password}))

    }else{
      await signUp(email, password)
    }
  }

  return (
    <div className="relative flex flex-col h-screen w-screen bg-black md:items-center md:justify-center md:bg-transparent">
      <Head>
        <title>Login - Netflix</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Image
        src="https://rb.gy/p2hphi"
        alt="login"
        layout="fill"
        objectFit="cover"
        className="-z-10 hidden opacity-60 sm:inline"
      />
      <img src="https://rb.gy/ulxxee" width={100} height={100} className="absolute left-4 top-4 cursor-pointer object-contain" />

      <form action="" className="relative mt-24 space-y-8 rounded
       px-10 py-6 bg-black/75 md:mt-0" onSubmit={handleSubmit(onSubmit)}>
      <h2 className="text-4xl font-semibold">Login</h2>
        <div className="space-y-4">
          <label htmlFor="" className="inline-block w-full">
            <input type="email" placeholder="Email" className="input" {...register("email", {required:true})} />
            {errors.email && <p className="text-orange-500">Please enter the valid email</p>}
          </label>
          <label htmlFor="" className="inline-block w-full">
            <input type="password" placeholder="Password" className="input" {...register("password", {required:true})}  />
            {errors.password && <p className="text-orange-500">Please enter the valid password</p>}
          </label>
        </div>
        <button className="w-full rounded p-3 font-semibold bg-[#e50914]" type="submit" onClick={() => setLogin(true)}>Sign In</button>
        <div className="text-[gray]" >
          Now to Netflix? {" "}
          <button type="submit" className="text-white hover:underline" onClick={() => setLogin(false)}>Sign up now</button>
        </div>
      </form>
    </div>
  )
}
export const getServerSideProps = async() =>{
  const stripe = new Stripe(process.env.Stirpe_Secret_Key)
  const data = await stripe.products.list({
    limit:3
  })
  console.log(JSON.stringify(data))
  return{
    props:{
      products:data
    }
  }
}
export default Login